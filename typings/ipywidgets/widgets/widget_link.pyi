"""
This type stub file was generated by pyright.
"""

from .widget import register
from .widget_core import CoreWidget
from traitlets import Tuple

"""Link and DirectionalLink classes.

Propagate changes between widgets on the javascript side.
"""
class WidgetTraitTuple(Tuple):
    """Traitlet for validating a single (Widget, 'trait_name') pair"""
    info_text = ...
    def __init__(self, **kwargs) -> None:
        ...
    
    def validate_elements(self, obj, value): # -> tuple[Unknown, ...]:
        ...
    


@register
class Link(CoreWidget):
    """Link Widget

    source: a (Widget, 'trait_name') tuple for the source trait
    target: a (Widget, 'trait_name') tuple that should be updated
    """
    _model_name = ...
    target = ...
    source = ...
    def __init__(self, source, target, **kwargs) -> None:
        ...
    
    def unlink(self): # -> None:
        ...
    


def jslink(attr1, attr2): # -> Link:
    """Link two widget attributes on the frontend so they remain in sync.

    The link is created in the front-end and does not rely on a roundtrip
    to the backend.

    Parameters
    ----------
    source : a (Widget, 'trait_name') tuple for the first trait
    target : a (Widget, 'trait_name') tuple for the second trait

    Examples
    --------

    >>> c = link((widget1, 'value'), (widget2, 'value'))
    """
    ...

@register
class DirectionalLink(Link):
    """A directional link

    source: a (Widget, 'trait_name') tuple for the source trait
    target: a (Widget, 'trait_name') tuple that should be updated
    when the source trait changes.
    """
    _model_name = ...


def jsdlink(source, target): # -> DirectionalLink:
    """Link a source widget attribute with a target widget attribute.

    The link is created in the front-end and does not rely on a roundtrip
    to the backend.

    Parameters
    ----------
    source : a (Widget, 'trait_name') tuple for the source trait
    target : a (Widget, 'trait_name') tuple for the target trait

    Examples
    --------

    >>> c = dlink((src_widget, 'value'), (tgt_widget, 'value'))
    """
    ...

