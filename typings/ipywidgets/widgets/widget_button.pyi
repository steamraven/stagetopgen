"""
This type stub file was generated by pyright.
"""

from .domwidget import DOMWidget
from .widget import register
from .widget_core import CoreWidget
from .widget_style import Style

"""Button class.

Represents a button in the frontend using a widget.  Allows user to listen for
click events on the button and trigger backend code when the clicks are fired.
"""
@register
class ButtonStyle(Style, CoreWidget):
    """Button style widget."""
    _model_name = ...
    button_color = ...
    font_family = ...
    font_size = ...
    font_style = ...
    font_variant = ...
    font_weight = ...
    text_color = ...
    text_decoration = ...


@register
class Button(DOMWidget, CoreWidget):
    """Button widget.

    This widget has an `on_click` method that allows you to listen for the
    user clicking on the button.  The click event itself is stateless.

    Parameters
    ----------
    description: str
       description displayed on the button
    icon: str
       font-awesome icon names, without the 'fa-' prefix
    disabled: bool
       whether user interaction is enabled
    """
    _view_name = ...
    _model_name = ...
    description = ...
    disabled = ...
    icon = ...
    button_style = ...
    style = ...
    def __init__(self, **kwargs) -> None:
        ...
    
    def on_click(self, callback, remove=...): # -> None:
        """Register a callback to execute when the button is clicked.

        The callback will be called with one argument, the clicked button
        widget instance.

        Parameters
        ----------
        remove: bool (optional)
            Set to true to remove the callback from the list of callbacks.
        """
        ...
    
    def click(self): # -> None:
        """Programmatically trigger a click event.

        This will call the callbacks registered to the clicked button
        widget instance.
        """
        ...
    


